@startuml
Client -> Client: VAD and record audio
Client -> Server: audio bytes
Server -> Client: ASR result
group send/repeat command as repeat
  Client -> Server: audio bytes
  Server -> Server: ASR result is [send] or [repeat], treat 'send' as 'repeat'
  Server -> Client: ASR result, type="REPEAT"
  Client -> Server: cmd="REPEAT", payload="text in input box"
  Server -> Server: generate tts audio URL with the payload
  Server -> Client: tts audio URL
  Client -> Client: play tts audio
  Server -> Server: generate tts audio marks
  Server -> Client: tts audio marks
end
group send command as send
  Client -> Server: cmd="INTERRUPT", payload="${previous mark}"
  note right: during playing or right after the tts audio
  Client -> Server: audio bytes
  Server -> Server: mark conversation as 'interrupted'
  Server -> Server: ASR result is [send]
  Server -> Server: clear 'interrupted' flag in conversation
  Server -> Client: ASR result, type="SEND"
  Server -> Server: generate tts audio URL with "your message has been sent"
  Client -> Client: send out the message
  Server -> Client: tts audio URL
  Client -> Client: play tts audio
end
group altering
  Client -> Server: cmd="INTERRUPT", payload="${previous mark}"
  note right: during playing or right after the tts audio
  Client -> Server: audio bytes
  Server -> Server: mark conversation as 'interrupted'
  Server -> Server: ASR result is non-command
  Server -> Server: determined as "altering" process, and save ASR result to ws-session
  Server -> Server: alter the text
  Server -> Client: ASR result, type="ALTER", payload="${altered text}"
  Server -> Server: generate tts audio URL with altered text
  Client -> Client: update input box
  Server -> Client: tts audio URL
  Server -> Server: generate tts audio marks
  Client -> Client: play tts audio
  Server -> Client: tts audio marks
end
@enduml