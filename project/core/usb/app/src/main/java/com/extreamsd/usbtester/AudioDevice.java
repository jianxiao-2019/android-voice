/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.extreamsd.usbtester;

public class AudioDevice {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;

    protected AudioDevice(long cPtr, boolean cMemoryOwn) {
        swigCMemOwn = cMemoryOwn;
        swigCPtr = cPtr;
    }

    protected static long getCPtr(AudioDevice obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    protected void finalize() {
        delete();
    }

    public synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                USBTestNativeJNI.delete_AudioDevice(swigCPtr);
            }
            swigCPtr = 0;
        }
    }

    public AudioMode getCurrentOutputMode() {
        long cPtr = USBTestNativeJNI.AudioDevice_getCurrentOutputMode(swigCPtr, this);
        return (cPtr == 0) ? null : new AudioMode(cPtr, false);
    }

    public void setCurrentOutputMode(AudioMode i_mode) {
        USBTestNativeJNI.AudioDevice_setCurrentOutputMode(swigCPtr, this, AudioMode.getCPtr(i_mode), i_mode);
    }

    public int getNumberOfInputModes() {
        return USBTestNativeJNI.AudioDevice_getNumberOfInputModes(swigCPtr, this);
    }

    public int getNumberOfOutputModes() {
        return USBTestNativeJNI.AudioDevice_getNumberOfOutputModes(swigCPtr, this);
    }

    public void setLastUsedInputMode(AudioMode i_mode) {
        USBTestNativeJNI.AudioDevice_setLastUsedInputMode(swigCPtr, this, AudioMode.getCPtr(i_mode), i_mode);
    }

    public AudioMode getInputMode(int i_index) {
        long cPtr = USBTestNativeJNI.AudioDevice_getInputMode(swigCPtr, this, i_index);
        return (cPtr == 0) ? null : new AudioMode(cPtr, false);
    }

    public AudioMode getOutputMode(int i_index) {
        long cPtr = USBTestNativeJNI.AudioDevice_getOutputMode(swigCPtr, this, i_index);
        return (cPtr == 0) ? null : new AudioMode(cPtr, false);
    }

    public String getName() {
        return USBTestNativeJNI.AudioDevice_getName(swigCPtr, this);
    }

    public int audioInputModeToIndex(AudioMode i_mode) {
        return USBTestNativeJNI.AudioDevice_audioInputModeToIndex(swigCPtr, this, AudioMode.getCPtr(i_mode), i_mode);
    }

    public int audioOutputModeToIndex(AudioMode i_mode) {
        return USBTestNativeJNI.AudioDevice_audioOutputModeToIndex(swigCPtr, this, AudioMode.getCPtr(i_mode), i_mode);
    }

    public boolean setSampleRate(int i_sampleRate) {
        return USBTestNativeJNI.AudioDevice_setSampleRate(swigCPtr, this, i_sampleRate);
    }

    public int getCurrentSampleRate() {
        return USBTestNativeJNI.AudioDevice_getCurrentSampleRate(swigCPtr, this);
    }

    public int getSampleRate(int i_index) {
        return USBTestNativeJNI.AudioDevice_getSampleRate(swigCPtr, this, i_index);
    }

    public void setSampleRateByIndex(int i_index) {
        USBTestNativeJNI.AudioDevice_setSampleRateByIndex(swigCPtr, this, i_index);
    }

    public IntVector getAvailableSampleRates() {
        return new IntVector(USBTestNativeJNI.AudioDevice_getAvailableSampleRates(swigCPtr, this), true);
    }

    public boolean isSampleRateAvailable(int i_sampleRate) {
        return USBTestNativeJNI.AudioDevice_isSampleRateAvailable(swigCPtr, this, i_sampleRate);
    }

    public void setInputResolution(int i_resolution) {
        USBTestNativeJNI.AudioDevice_setInputResolution(swigCPtr, this, i_resolution);
    }

    public int getCurrentInputResolution() {
        return USBTestNativeJNI.AudioDevice_getCurrentInputResolution(swigCPtr, this);
    }

    public int getInputResolution(int i_index) {
        return USBTestNativeJNI.AudioDevice_getInputResolution(swigCPtr, this, i_index);
    }

    public void setInputResolutionByIndex(int i_index) {
        USBTestNativeJNI.AudioDevice_setInputResolutionByIndex(swigCPtr, this, i_index);
    }

    public IntVector getAvailableInputResolutions() {
        return new IntVector(USBTestNativeJNI.AudioDevice_getAvailableInputResolutions(swigCPtr, this), true);
    }

    public boolean isInputResolutionAvailable(int i_resolution) {
        return USBTestNativeJNI.AudioDevice_isInputResolutionAvailable(swigCPtr, this, i_resolution);
    }

    public void setOutputResolution(int i_resolution) {
        USBTestNativeJNI.AudioDevice_setOutputResolution(swigCPtr, this, i_resolution);
    }

    public int getCurrentOutputResolution() {
        return USBTestNativeJNI.AudioDevice_getCurrentOutputResolution(swigCPtr, this);
    }

    public int getOutputResolution(int i_index) {
        return USBTestNativeJNI.AudioDevice_getOutputResolution(swigCPtr, this, i_index);
    }

    public void setOutputResolutionByIndex(int i_index) {
        USBTestNativeJNI.AudioDevice_setOutputResolutionByIndex(swigCPtr, this, i_index);
    }

    public IntVector getAvailableOutputResolutions() {
        return new IntVector(USBTestNativeJNI.AudioDevice_getAvailableOutputResolutions(swigCPtr, this), true);
    }

    public boolean isOutputResolutionAvailable(int i_resolution) {
        return USBTestNativeJNI.AudioDevice_isOutputResolutionAvailable(swigCPtr, this, i_resolution);
    }

    public int getProductId() {
        return USBTestNativeJNI.AudioDevice_getProductId(swigCPtr, this);
    }

    public int getVendorId() {
        return USBTestNativeJNI.AudioDevice_getVendorId(swigCPtr, this);
    }

    public String getDeviceString() {
        return USBTestNativeJNI.AudioDevice_getDeviceString(swigCPtr, this);
    }

}
